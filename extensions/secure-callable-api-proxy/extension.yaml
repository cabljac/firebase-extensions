# Learn detailed information about the fields of an extension.yaml file in the docs:
# https://firebase.google.com/docs/extensions/alpha/ref-extension-yaml

name: secure-callable-api-proxy # Identifier for your extension
version: 0.0.1 # Follow semver versioning
specVersion: v1beta # Version of the Firebase Extensions specification

# Friendly display name for your extension (~3-5 words)
displayName: Secure API Proxy

description: >-
  Deploys a secure backend callable function to Firebase to proxy an API endpoint, protecting your API key and preventing resource abuse, optionally secured by Firebase App Check.

license: Apache-2.0

tags:
  [api-proxy, secure-backend, firebase-functions, app-check, cloud-functions]

author:
  authorName: Jacob Cable
  url: https://github.com/cabljac

contributors:
  - authorName: Jacob Cable
    url: https://github.com/cabljac

# Public URL for the source code of your extension
sourceUrl: https://github.com/cabljac/firebase-extensions/tree/main/extensions/secure-callable-api-proxy
releaseNotesUrl: https://github.com/your-repo/firebase-extensions/tree/extensions/secure-callable-api-proxy/api-proxy-backend/CHANGELOG.md

# Specify whether a paid-tier billing plan is required to use your extension.
billingRequired: true

# In the `resources` field, list each of your extension's functions, including the trigger for each function.
resources:
  - name: apiproxy
    type: firebaseextensions.v1beta.function
    description: >-
      HTTP endpoint that proxies HTTP requests to the specified API, secured by App Check if enabled.
    properties:
      location: ${LOCATION}
      httpsTrigger: {}
      runtime: nodejs18

# In the `params` field, set up your extension's user-configured parameters.
params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension? For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    required: true
    immutable: true

  - param: API_URL
    label: Target API URL
    description: >-
      The base URL of the API that you want to proxy requests to.
    type: string
    required: true

  - param: API_KEY_STRATEGY
    label: API Key Strategy
    description: >-
      How should the extension handle the API key? If not specified, the extension will not attempt to add an API key to requests.
    type: select
    options:
      - label: Custom Request Header
        value: header
      - label: Query Parameter
        value: query
    default: header
    required: true

  - param: API_KEY_HEADER_OR_QUERY_PARAM
    label: API Key Header or Query Parameter
    description: >-
      The name of the header or query parameter to add the API key to when making requests to the target. If not specified, the extension will not attempt to add an API key to requests.
    type: string
    example: X-API-Key (if using a header) or api_key (if using a query parameter)
    required: false

  - param: API_KEY
    label: API Key
    description: >-
      API key to be used when making requests to the target API. This will be added as a Bearer token in the Authorization header.
    type: secret
    required: false

  - param: HTTP_METHOD
    label: HTTP Method
    description: >-
      The HTTP method to use when making requests to the target API. Choose from GET, POST, PUT, PATCH, DELETE, HEAD, or OPTIONS.
    type: select
    options:
      - label: GET
        value: GET
      - label: POST
        value: POST
      - label: PUT
        value: PUT
      - label: PATCH
        value: PATCH
      - label: DELETE
        value: DELETE
      - label: HEAD
        value: HEAD
      - label: OPTIONS
        value: OPTIONS
    default: GET
    required: false

  - param: HTTP_HEADERS
    label: HTTP Headers
    description: >-
      A stringified JSON object specifying custom headers to include in the HTTP requests made by the extension. Each header should be a key-value pair, where the key is the header name and the value is the header value.
    type: string
    example: '{"X-Custom-Header": "value", "Another-Header": "another-value"}'
    required: false

  - param: HTTP_BODY
    label: HTTP Body
    description: >-
      The body content to include in the HTTP requests made by the extension. This should be a valid JSON string.
    type: string
    example: '{"key1": "value1", "key2": "value2"}'
    required: false

  - param: CONFIG_DOCUMENT_PATH
    label: Config Document Path
    description: >-
      Path to the Firestore document that contains a configuration document for the API proxy. See the PREINSTALL.md for more information.
    type: string
    required: false

  - param: ENFORCE_AUTH
    label: Enforce Authentication
    description: >-
      Should the extension enforce Firebase Authentication for function calls? Defaults to yes.
    type: select
    options:
      - label: Yes
        value: yes
      - label: No
        value: no
    default: yes
    required: true

  - param: ENFORCE_APP_CHECK
    label: Enforce App Check
    description: >-
      Should the extension enforce App Check for function calls to ensure only authorized apps can make requests? Defaults to no.
    type: select
    options:
      - label: Yes
        value: yes
      - label: No
        value: no
    default: no
    required: true
# # Event types that your extension emits - TODO
# events:
#   - type: firebase.extensions.api-proxy-backend.v1.onStart
#     description: Occurs when any of the extension's functions receive a request.

#   - type: firebase.extensions.api-proxy-backend.v1.onRequest
#     description: Occurs when the extension attempts to proxy a request to the target API.

#   - type: firebase.extensions.api-proxy-backend.v1.onResponse
#     description: Occurs when the extension successfully receives a response from the target API.

#   - type: firebase.extensions.api-proxy-backend.v1.onError
#     description: Occurs when the extension fails to complete execution due to an error.
